/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { JeDAO, JeDAOInterface } from "../../contracts/JeDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chairPerson",
        type: "address",
      },
      {
        internalType: "address",
        name: "voteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumQuorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debatingPeriodDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chairman",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalID",
        type: "uint256",
      },
    ],
    name: "finishProposal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isVoteFor",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200172538038062001725833981810160405281019062000037919062000107565b600160008190555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002819055508060038190555050505050620001e5565b600081519050620000ea81620001b1565b92915050565b6000815190506200010181620001cb565b92915050565b600080600080608085870312156200011e57600080fd5b60006200012e87828801620000d9565b94505060206200014187828801620000d9565b93505060406200015487828801620000f0565b92505060606200016787828801620000f0565b91505092959194509250565b6000620001808262000187565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001bc8162000173565b8114620001c857600080fd5b50565b620001d681620001a7565b8114620001e257600080fd5b50565b61153080620001f56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806327393278146100675780632e1a7d4d146100975780636a18ff7a146100c757806387f7b975146100f7578063b6b55f2514610115578063dc07aeb214610145575b600080fd5b610081600480360381019061007c9190610c86565b610175565b60405161008e9190610f54565b60405180910390f35b6100b160048036038101906100ac9190610c86565b61032e565b6040516100be9190610f54565b60405180910390f35b6100e160048036038101906100dc9190610caf565b61052c565b6040516100ee9190610f54565b60405180910390f35b6100ff6106fa565b60405161010c9190610ed9565b60405180910390f35b61012f600480360381019061012a9190610c86565b610720565b60405161013c9190610f54565b60405180910390f35b61015f600480360381019061015a9190610c07565b610836565b60405161016c919061106f565b60405180910390f35b60008060066000848152602001908152602001600020905080600001544210156101d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cb90610faf565b60405180910390fd5b6000816002015482600101546101ea9190611142565b9050600254811015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610f6f565b60405180910390fd5b8160020154826001015411156103195760008260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000846004016040516102919190610ec2565b60006040518083038185875af1925050503d80600081146102ce576040519150601f19603f3d011682016040523d82523d6000602084013e6102d3565b606091505b5050905080610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90610fef565b60405180910390fd5b505b60008260000181905550600192505050919050565b600060026000541415610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d9061102f565b60405180910390fd5b60026000819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154421015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061104f565b60405180910390fd5b828160000154101561044f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104469061100f565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016104ac929190610f2b565b602060405180830381600087803b1580156104c657600080fd5b505af11580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190610bde565b50828160000160008282546105139190611198565b9250508190555060019150506001600081905550919050565b6000806006600086815260200190815260200160002090506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260000154116105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c590610fcf565b60405180910390fd5b848160020160008881526020019081526020016000205482600001546105f49190611198565b1015610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c9061100f565b60405180910390fd5b8315610687578482600101600082825461064f9190611142565b9250508190555084816002016000888152602001908152602001600020600082825461067b9190611142565b925050819055506106cf565b8482600201600082825461069b9190611142565b925050819055508481600201600088815260200190815260200160002060008282546106c79190611142565b925050819055505b8160000154816001015410156106ed57816000015481600101819055505b6001925050509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161078193929190610ef4565b602060405180830381600087803b15801561079b57600080fd5b505af11580156107af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d39190610bde565b5081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546108269190611142565b9250508190555060019050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bf90610f8f565b60405180910390fd5b60006006600060045481526020019081526020016000209050600460008154809291906108f490611286565b9190505550600354426109079190611142565b8160000181905550838160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508481600401908051906020019061096a929190610991565b5082816005019080519060200190610983929190610a17565b506004549150509392505050565b82805461099d90611223565b90600052602060002090601f0160209004810192826109bf5760008555610a06565b82601f106109d857805160ff1916838001178555610a06565b82800160010185558215610a06579182015b82811115610a055782518255916020019190600101906109ea565b5b509050610a139190610a9d565b5090565b828054610a2390611223565b90600052602060002090601f016020900481019282610a455760008555610a8c565b82601f10610a5e57805160ff1916838001178555610a8c565b82800160010185558215610a8c579182015b82811115610a8b578251825591602001919060010190610a70565b5b509050610a999190610a9d565b5090565b5b80821115610ab6576000816000905550600101610a9e565b5090565b6000610acd610ac8846110af565b61108a565b905082815260208101848484011115610ae557600080fd5b610af0848285611214565b509392505050565b6000610b0b610b06846110e0565b61108a565b905082815260208101848484011115610b2357600080fd5b610b2e848285611214565b509392505050565b600081359050610b45816114b5565b92915050565b600081359050610b5a816114cc565b92915050565b600081519050610b6f816114cc565b92915050565b600082601f830112610b8657600080fd5b8135610b96848260208601610aba565b91505092915050565b600082601f830112610bb057600080fd5b8135610bc0848260208601610af8565b91505092915050565b600081359050610bd8816114e3565b92915050565b600060208284031215610bf057600080fd5b6000610bfe84828501610b60565b91505092915050565b600080600060608486031215610c1c57600080fd5b600084013567ffffffffffffffff811115610c3657600080fd5b610c4286828701610b75565b9350506020610c5386828701610b36565b925050604084013567ffffffffffffffff811115610c7057600080fd5b610c7c86828701610b9f565b9150509250925092565b600060208284031215610c9857600080fd5b6000610ca684828501610bc9565b91505092915050565b600080600060608486031215610cc457600080fd5b6000610cd286828701610bc9565b9350506020610ce386828701610bc9565b9250506040610cf486828701610b4b565b9150509250925092565b610d07816111cc565b82525050565b610d16816111de565b82525050565b60008154610d2981611223565b610d338186611126565b94506001821660008114610d4e5760018114610d5f57610d92565b60ff19831686528186019350610d92565b610d6885611111565b60005b83811015610d8a57815481890152600182019150602081019050610d6b565b838801955050505b50505092915050565b6000610da8601083611131565b9150610db38261136d565b602082019050919050565b6000610dcb600d83611131565b9150610dd682611396565b602082019050919050565b6000610dee601883611131565b9150610df9826113bf565b602082019050919050565b6000610e11601683611131565b9150610e1c826113e8565b602082019050919050565b6000610e34601083611131565b9150610e3f82611411565b602082019050919050565b6000610e57601183611131565b9150610e628261143a565b602082019050919050565b6000610e7a601f83611131565b9150610e8582611463565b602082019050919050565b6000610e9d601283611131565b9150610ea88261148c565b602082019050919050565b610ebc8161120a565b82525050565b6000610ece8284610d1c565b915081905092915050565b6000602082019050610eee6000830184610cfe565b92915050565b6000606082019050610f096000830186610cfe565b610f166020830185610cfe565b610f236040830184610eb3565b949350505050565b6000604082019050610f406000830185610cfe565b610f4d6020830184610eb3565b9392505050565b6000602082019050610f696000830184610d0d565b92915050565b60006020820190508181036000830152610f8881610d9b565b9050919050565b60006020820190508181036000830152610fa881610dbe565b9050919050565b60006020820190508181036000830152610fc881610de1565b9050919050565b60006020820190508181036000830152610fe881610e04565b9050919050565b6000602082019050818103600083015261100881610e27565b9050919050565b6000602082019050818103600083015261102881610e4a565b9050919050565b6000602082019050818103600083015261104881610e6d565b9050919050565b6000602082019050818103600083015261106881610e90565b9050919050565b60006020820190506110846000830184610eb3565b92915050565b60006110946110a5565b90506110a08282611255565b919050565b6000604051905090565b600067ffffffffffffffff8211156110ca576110c961132d565b5b6110d38261135c565b9050602081019050919050565b600067ffffffffffffffff8211156110fb576110fa61132d565b5b6111048261135c565b9050602081019050919050565b60008190508160005260206000209050919050565b600081905092915050565b600082825260208201905092915050565b600061114d8261120a565b91506111588361120a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561118d5761118c6112cf565b5b828201905092915050565b60006111a38261120a565b91506111ae8361120a565b9250828210156111c1576111c06112cf565b5b828203905092915050565b60006111d7826111ea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000600282049050600182168061123b57607f821691505b6020821081141561124f5761124e6112fe565b5b50919050565b61125e8261135c565b810181811067ffffffffffffffff8211171561127d5761127c61132d565b5b80604052505050565b60006112918261120a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112c4576112c36112cf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f75676820766f74657300000000000000000000000000000000600082015250565b7f43686169726d616e206f6e6c7900000000000000000000000000000000000000600082015250565b7f50726f706f73616c206973206e6f742066696e69736865640000000000000000600082015250565b7f50726f706f73616c206973206e6f742061637469766500000000000000000000600082015250565b7f4f7065726174696f6e206661696c656400000000000000000000000000000000600082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f43616e2774207769746864726177207965740000000000000000000000000000600082015250565b6114be816111cc565b81146114c957600080fd5b50565b6114d5816111de565b81146114e057600080fd5b50565b6114ec8161120a565b81146114f757600080fd5b5056fea2646970667358221220a1ffa89f2c6e9db2fe2da80338316bd3567b74b882fbc363ec21bc82ee36212264736f6c63430008040033";

type JeDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JeDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JeDAO__factory extends ContractFactory {
  constructor(...args: JeDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    chairPerson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JeDAO> {
    return super.deploy(
      chairPerson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    ) as Promise<JeDAO>;
  }
  override getDeployTransaction(
    chairPerson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chairPerson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    );
  }
  override attach(address: string): JeDAO {
    return super.attach(address) as JeDAO;
  }
  override connect(signer: Signer): JeDAO__factory {
    return super.connect(signer) as JeDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JeDAOInterface {
    return new utils.Interface(_abi) as JeDAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): JeDAO {
    return new Contract(address, _abi, signerOrProvider) as JeDAO;
  }
}
